sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/ui/core/UIComponent"],function(e,t,s){"use strict";return e.extend("skillmatrix.skillmatrix.controller.ManageEntries",{onInit(){const e={KID:null,FIRST_NAME:null,LAST_NAME:null,EMAIL:null,CAPACITY:null,LOCATION:null,TO_MEMBER_SKILLS:[]};const s=new t(e);this.getView().setModel(s,"NewEntryModel")},getText(e,t){return this.getView().getModel("i18n").getResourceBundle().getText(e,t)},onAddSkill(){const e=this.byId("NewSkillsComboBox"),t=this.byId("NewExpertiseLevelComboBox"),s=e.getSelectedKey(),l=t.getSelectedKey();if(!s||!l){sap.m.MessageToast.show(this.getText("selectSkillAndLevel"));return}const a=this.getView().getModel("NewEntryModel"),o=a.getProperty("/TO_MEMBER_SKILLS")||[];const n=o.some(e=>e.SKILL===s);if(n){sap.m.MessageToast.show(this.getText("duplicateSkill"));return}o.push({SKILL:s,SCORE:parseInt(l)});a.setProperty("/TO_MEMBER_SKILLS",o);e.setSelectedKey([]);t.setSelectedKey([])},onDeleteSkill(e){const t=e.getSource(),s=t.getBindingContext("NewEntryModel"),l=s.getPath(),a=this.getView().getModel("NewEntryModel");const o=a.getProperty("/TO_MEMBER_SKILLS");const n=parseInt(l.split("/").pop());o.splice(n,1);a.setProperty("/TO_MEMBER_SKILLS",o);sap.m.MessageToast.show(this.getText("skillRemoved"))},_validateForm(){const e=this.getView();let t=true;const s=e.byId("NewFirstName"),l=e.byId("NewLastName"),a=e.byId("NewKID"),o=e.byId("NewEmail");const n=s.getValue(),i=l.getValue(),r=a.getValue(),u=o.getValue();const S=/^[A-Za-zÀ-ÿ'-]+$/,d=/^[A-Za-z][0-9]*$/,T=/^\S+@\S+\.\S+$/;if(!n){s.setValueState("Error");s.setValueStateText(this.getText("fieldRequiredText"));t=false}else if(!S.test(n)){s.setValueState("Error");s.setValueStateText(this.getText("nameInputValueStateText"));t=false}else{s.setValueState("None")}if(!i){l.setValueState("Error");l.setValueStateText(this.getText("fieldRequiredText"));t=false}else if(!S.test(i)){l.setValueState("Error");l.setValueStateText(this.getText("nameInputValueStateText"));t=false}else{l.setValueState("None")}if(!r){a.setValueState("Error");a.setValueStateText(this.getText("fieldRequiredText"));t=false}else if(!d.test(r)){a.setValueState("Error");a.setValueStateText(this.getText("kidInputValueStateText"));t=false}else{a.setValueState("None")}if(!u){o.setValueState("Error");o.setValueStateText(this.getText("fieldRequiredText"));t=false}else if(!T.test(u)){o.setValueState("Error");o.setValueStateText(this.getText("emailInputValueStateText"));t=false}else{o.setValueState("None")}const g=this.byId("newLocationComboBox"),x=g.getSelectedKey();if(!x){g.setValueState("Error");g.setValueStateText(this.getText("fieldRequiredText"));t=false}else{g.setValueState("None")}return t},async handleSubmit(){if(!this._validateForm()){sap.m.MessageBox.warning(this.getText("errorOnSubmitWarning"));return}const e=this.getView().getModel("NewEntryModel").getData(),t=this.getView().getModel("catalogModel");try{const l="newTeamMembersGroup";const a=t.bindList("/TeamMembers",undefined,undefined,undefined,{$$updateGroupId:l});a.create(e);await t.submitBatch(l).then(()=>{sap.m.MessageToast.show(this.getText("newEntryCreateSuccess"));this.getView().getModel("NewEntryModel").setData({KID:null,FIRST_NAME:null,LAST_NAME:null,EMAIL:null,CAPACITY:null,LOCATION:null,TO_MEMBER_SKILLS:[]});this.byId("NewSkillsComboBox").setSelectedKey(null);this.byId("NewExpertiseLevelComboBox").setSelectedKey(null);const e=s.getRouterFor(this);setTimeout(()=>{e.navTo("RouteMain",{},true)},500)})}catch(e){console.error(this.getText("newEntryErrorConsole"),e);sap.m.MessageBox.error(this.getText("newEntryErrorMessageBox"))}},handleCancel(){const e=this.getView().getModel("NewEntryModel");e.setData({KID:null,FIRST_NAME:null,LAST_NAME:null,EMAIL:null,CAPACITY:null,LOCATION:null,TO_MEMBER_SKILLS:[]});this.byId("NewSkillsComboBox").setSelectedKey(null);this.byId("NewExpertiseLevelComboBox").setSelectedKey(null);const t=s.getRouterFor(this);t.navTo("RouteMain",{},true)}})});
//# sourceMappingURL=ManageEntries.controller.js.map