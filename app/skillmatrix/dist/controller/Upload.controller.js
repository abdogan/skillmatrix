sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","custom/XLSX","sap/m/MessageBox","sap/ui/model/json/JSONModel"],function(e,t,o,s,n){"use strict";return e.extend("skillmatrix.skillmatrix.controller.Upload",{onInit(){const e=new n({file:null,parsedData:[]});this.getView().setModel(e,"uploadModel");const t=new n({members:[]});this.getView().setModel(t,"teamMembersModel");this.loadTeamMembers();const o=new n({capacityData:[]});this.getView().setModel(o,"capacityPayloadModel")},getText(e,t){return this.getView().getModel("i18n").getResourceBundle().getText(e,t)},loadTeamMembers(){const e=this.getOwnerComponent().getModel("catalogModel");if(!e){console.error("catalogModel is not available yet");setTimeout(()=>this.loadTeamMembers(),500);return}try{const t=e.bindList("/TeamMembers");t.requestContexts(0,1e3).then(e=>{if(e&&e.length>0){const t=e.map(e=>e.getObject());const o=this.getView().getModel("teamMembersModel");o.setProperty("/members",t);console.log("TeamMembers loaded successfully:",t)}else{console.log("No TeamMembers found or empty result")}}).catch(e=>{console.error("Error requesting TeamMembers contexts:",e)})}catch(e){console.error("Error binding TeamMembers list:",e)}},handleUploadComplete(e){let o="File upload complete. Status: 404",s=parseInt(/\d{3}/.exec(o)[0]),n;if(o){n=s===200?o+" (Upload Success)":o+" (Upload Error)";t.show(n)}},fileUploadChange(e){const t=this.getView(),o=t.getModel("uploadModel"),s=e.getParameter("files")&&e.getParameter("files")[0];o.setProperty("/file",s);console.log("UploadModel Data:",this.getView().getModel("uploadModel").getData())},async handleParsePersonalDataPress(e){const t=this.getView(),n=t.getModel("uploadModel"),a=n.getProperty("/file"),r=t.getModel("i18n"),l=t.getModel("catalogModel");if(!(a&&window.FileReader))return;const i=l.bindList("/Locations");const c=await i.requestContexts();const d=new Set(c.map(e=>e.getObject().LOCATION));const g=new FileReader;g.onload=async e=>{const t=e.target.result,a=o.read(t,{type:"binary"}),l=a.Sheets[a.SheetNames[0]],i=o.utils.sheet_to_json(l),c=i[0]?Object.keys(i[0]):[];if(!c.length){s.information(r.getProperty("emptyExcelFile"));this.onUploadCancel();return}const g={firstname:"FIRST_NAME",lastname:"LAST_NAME",email:"EMAIL",kid:"KID","location(uuid)":"LOCATION","location(city)":"CITY",country:"COUNTRY"};const u=[];const p=[];for(const e of i){const t={};const o={};Object.entries(e).forEach(([e,s])=>{const n=e.toLowerCase().replace(/[\s_]/g,"");const a=g[n];if(a&&s!==undefined){if(a==="LOCATION"){t.LOCATION=s.trim()}else if(a==="CITY"){o.CITY=s.trim()}else if(a==="COUNTRY"){o.COUNTRY=s.trim()}else{t[a]=s.toString().trim()}}});const s=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(t.LOCATION);const n=t.KID&&t.KID.trim().length>0;if(!s||!n){console.warn("Skipping invalid row:",e);continue}t.CAPACITY=null;u.push(t);if(!d.has(t.LOCATION)){p.push({LOCATION:t.LOCATION,CITY:o.CITY||"",COUNTRY:o.COUNTRY||""});d.add(t.LOCATION)}}n.setProperty("/parsedData",u);n.setProperty("/parsedLocations",p);console.log("Team members parsed:",u);console.log("New locations found:",p);s.information(r.getProperty("parseInfoSuccessMsg"))};g.onerror=function(e){console.log(e)};g.readAsArrayBuffer(a)},async handleSubmitPersonalDataPress(){const e=this.getView(),t=e.getModel("uploadModel"),o=e.getModel("catalogModel"),n=t.getProperty("/parsedData"),a=t.getProperty("/parsedLocations");if(!n||!n.length){s.warning(this.getText("noDataMsg"));return}const r="bulkUploadGroup";try{const t=e.getBindingContext("catalogModel")?e.getBindingContext("catalogModel").getBinding("TeamMembers"):o.bindList("/TeamMembers");const l=await t.requestContexts();const i=new Map;l.forEach(e=>{const t=e.getObject();i.set(t.KID,e)});const c=o.bindList("/TeamMembers",undefined,undefined,undefined,{$$updateGroupId:r});n.forEach(e=>{const t=i.get(e.KID);if(t){Object.entries(e).forEach(([e,o])=>{t.setProperty(e,o)})}else{c.create(e)}});if(a&&a.length){const e=o.bindList("/Locations",undefined,undefined,undefined,{$$updateGroupId:r});const t=new Set((await o.bindList("/Locations").requestContexts()).map(e=>e.getObject().LOCATION));a.forEach(o=>{if(!t.has(o.LOCATION)){e.create(o);t.add(o.LOCATION)}})}await o.submitBatch(r);o.refresh();s.success(this.getText("uploadSuccessMsg"))}catch(e){console.error(this.getText("consoleUploadFailText"),e);s.error(this.getText("uploadFailMsg"))}},async handleParseSkillDataPress(){console.log("skill triggered");const e=this.getView(),t=e.getModel("uploadModel"),n=t.getProperty("/file"),a=e.getModel("i18n");if(!(n&&window.FileReader))return;function r(e,t){const o=t.toLowerCase();return e.find(e=>e.toLowerCase().replace(/[\s_\-]/g,"").includes(o))}const l=new FileReader;l.onload=async e=>{const n=e.target.result,l=o.read(n,{type:"binary"}),i=l.Sheets[l.SheetNames[0]],c=o.utils.sheet_to_json(i),d=c[0]?Object.keys(c[0]):[];if(!d.length){s.information(a.getProperty("emptyExcelFile"));return}const g=r(d,"skill");const u=r(d,"shortdesc");if(!g||!u){s.error("Required columns (Skill, Short Desc) not found.");return}const p=[];for(const e of c){const t=e[g];const o=t?.toString().trim().replace(/[^\x20-\x7E]/g,"");const s=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(o);if(!s){console.warn("Skipping invalid UUID:",o);continue}const n=e[u]?.toString().trim()||"Unnamed Skill";p.push({SKILL:o,SHORT_DESC:n,LONG_DESC:""})}console.log("Parsed skill data:",p);t.setProperty("/parsedSkills",p);s.information(a.getProperty("parseInfoSuccessMsg"))};l.onerror=function(e){console.error("File read error",e)};l.readAsArrayBuffer(n)},async handleSubmitSkillDataPress(){const e=this.getView(),t=e.getModel("uploadModel"),o=e.getModel("catalogModel"),n=t.getProperty("/parsedSkills");if(!n||!n.length){s.warning(this.getText("noDataMsg"));return}const a=await o.bindList("/Skills").requestContexts();const r=new Set(a.map(e=>e.getObject().SKILL));const l="bulkUploadGroup";const i=o.bindList("/Skills",undefined,undefined,undefined,{$$updateGroupId:l});n.forEach(e=>{if(!r.has(e.SKILL)){i.create(e);r.add(e.SKILL)}});try{await o.submitBatch(l);o.refresh();s.success(this.getText("uploadSuccessMsg"))}catch(e){console.error(this.getText("consoleUploadFailText"),e);s.error(this.getText("uploadFailMsg"))}},handleParseCapacityDataPress(e){console.log("capacity triggered");const t=this.getView(),n=t.getModel("uploadModel"),a=n.getProperty("/file"),r=t.getModel("i18n"),l=this;if(a&&window.FileReader){const e=new FileReader;e.onload=async function(e){const t=e.target.result,n=o.read(t,{type:"binary"}),a=n.Sheets[n.SheetNames[0]],i=o.utils.sheet_to_json(a,{header:1,defval:null});console.log(i.slice(0,5));if(!i||i.length===0){s.information(this.getText("emptyExcelFile"));l.onUploadCancel();return}let c=-1;for(let e=0;e<i.length;e++){const t=i[e];if(t.some(e=>typeof e==="string"&&e.trim().toLowerCase()==="planned")){c=e;break}}console.log("plannedrowidx",c);const d=c+1,g=i[d];let u=-1;for(let e=0;e<g.length;e++){const t=g[e];if(typeof t==="string"&&t.trim().toLowerCase()==="week"){u=e;break}}const p={};for(let e=u+1;e<g.length;e++){const t=g[e],o=t!=null?String(t).trim():"",s=i[c][e];let n="";if(s!==null&&s!==undefined){if(typeof s==="number"){const e=new Date(Math.round((s-25569)*86400*1e3)),t=e.getDate().toString().padStart(2,"0"),o=(e.getMonth()+1).toString().padStart(2,"0"),a=e.getFullYear().toString().slice(-2);n=`${t}.${o}.${a}`}else{n=String(s).trim();if(/^\d+$/.test(n)){const e=parseInt(n,10),t=new Date(Math.round((e-25569)*86400*1e3)),o=t.getDate().toString().padStart(2,"0"),s=(t.getMonth()+1).toString().padStart(2,"0"),a=t.getFullYear().toString().slice(-2);n=`${o}.${s}.${a}`}}}if(!o||o.toLowerCase().includes("sum")||o.toLowerCase()==="week"){continue}p[e]={week_id:o,date_range:n}}console.log(p);const f=["prename","firstname","first_name","first name"];const m=["name","lastname","last_name","last name"];const h=e=>e.trim().toLowerCase().replace(/[\s_]/g,"");let M=-1;for(let e=d+1;e<i.length;e++){const t=i[e];if(t.some(e=>typeof e==="string"&&(f.includes(h(e))||m.includes(h(e))))){M=e;break}}console.log(M);const y=i[M];const w={prename:-1,name:-1,team:-1,needToCATs:-1,hoursPerWeek:-1};for(let e=0;e<y.length;e++){const t=y[e];if(typeof t==="string"){const o=h(t);if(f.includes(o))w.prename=e;else if(m.includes(o))w.name=e;else if(o==="team")w.team=e;else if(o==="needtocats")w.needToCATs=e;else if(o==="hoursperweek")w.hoursPerWeek=e}}console.log(w.team);let T=[];for(let e=M+1;e<i.length;e++){const t=i[e];const o=t[w.needToCATs];const s=typeof o==="string"&&o.trim().toLowerCase()==="yes";if(!s){continue}const n=t[w.prename]||"",a=t[w.name]||"",r=t[w.team]||"",l=t[w.hoursPerWeek]||null;const c={};for(const e in p){const{week_id:o,date_range:s}=p[e];const n=t[e];let a=null;if(typeof n==="string"&&n.trim().endsWith("%")){a=parseFloat(n.replace("%","").trim())/100}else if(typeof n==="number"){a=n}if(isNaN(a)||a===null)continue;const r=o.split(".");const l=r[0];const i=r[1]||"0";if(!c[l]){c[l]=[]}c[l].push({suffix:i,date_range:s,capacity:a})}const d=[];for(const e in c){const t=c[e];if(t.length===2){const o=t.sort((e,t)=>e.suffix.localeCompare(t.suffix));const s={week_id:e,date_range:`${o[0].date_range.split("-")[0].trim()} - ${o[1].date_range.split("-")[1].trim()}`,capacity:o[0].capacity+o[1].capacity};d.push(s)}else{const o=t[0];d.push({week_id:e,date_range:o.date_range,capacity:o.capacity})}}T.push({FIRST_NAME:n,LAST_NAME:a,TEAM:r,HOURS_PER_WEEK:l,WEEKLY_CAPACITY:d})}console.log("Parsed employee capacity data:",T);const S=l.getView().getModel("teamMembersModel").getProperty("/members");T=T.map(e=>{const t=(e.FIRST_NAME||"").trim().toLowerCase();const o=(e.LAST_NAME||"").trim().toLowerCase();const s=t.split(/[\s-]+/).filter(Boolean);const n=S.find(e=>{const t=(e.FIRST_NAME||"").trim().toLowerCase();const n=(e.LAST_NAME||"").trim().toLowerCase();return s.includes(t)&&n===o});if(!n){console.warn("noEmployeeMatchMsg",e.FIRST_NAME,e.LAST_NAME);return null}e.KID=n.KID;e.WEEKLY_CAPACITY.forEach(e=>{e.KID=n.KID});return e}).filter(Boolean);console.log("Final employee data with KIDs:",T);const C=[];T.forEach(e=>{e.WEEKLY_CAPACITY.forEach(t=>{C.push({KID:e.KID,WEEK_ID:t.week_id,DATE_RANGE:t.date_range,CAPACITY:Math.round(t.capacity*100)/100})})});const b=l.getView().getModel("capacityPayloadModel");b.setProperty("/capacityData",C);console.log("Payload prepared:",C);s.information(r.getProperty("parseInfoSuccessMsg"))};e.readAsArrayBuffer(a)}},async handleSubmitCapacityDataPress(){const e=this.getView().getModel("catalogModel");const o=this.getView().getModel("capacityPayloadModel");const n=o.getProperty("/capacityData");t.show(this.getText("uploadWaitMsg"),{duration:3e3});await new Promise(e=>setTimeout(e,300));if(!n||n.length===0){s.warning(this.getText("noDataMsg"));return}const a="deleteGroup";const r=[...new Set(n.map(e=>e.KID))];console.log("Unique KIDs to process:",r);await Promise.all(r.map(async t=>{console.log(`Processing delete for KID: ${t}`);const o=e.bindList("/TeamMemberCapacity",null,null,[new sap.ui.model.Filter("KID","EQ",t)]);try{const e=await o.requestContexts();if(e.length===0){console.log(`No existing records found for KID: ${t}`)}else{console.log(`Found ${e.length} records for KID: ${t}`)}e.forEach(e=>{console.log(`Scheduling delete for: ${e.getPath()}`);e.delete(a)})}catch(e){console.error(`Error retrieving or deleting records for KID ${t}:`,e)}}));await e.submitBatch(a);console.log("All deletions submitted.");try{await e.submitBatch(a);console.log("Deletion batch submitted.")}catch(e){console.error("Deletion batch failed:",e);t.show(this.getText("deleteOldRecordsError"));return}const l=100;for(let t=0;t<n.length;t+=l){const o=n.slice(t,t+l);const a=`createGroup_${t}`;const r=e.bindList("/TeamMemberCapacity",null,null,null,{$$updateGroupId:a});o.forEach(e=>{r.create(e)});try{await e.submitBatch(a);console.log(`Submitted chunk ${t}–${t+o.length-1}`)}catch(e){console.error(`Submission failed for chunk ${t}–${t+o.length-1}:`,e);s.error(this.getText("uploadFailMsg"));return}}e.refresh();s.success(this.getText("uploadSuccessMsg"));console.log("All entries saved:",n.length)}})});
//# sourceMappingURL=Upload.controller.js.map